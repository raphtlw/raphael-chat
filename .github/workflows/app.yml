on:
  push:
    branches:
      - main
      
defaults:
  run:
    working-directory: ./app

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2
      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Extra steps for macOS
        if: matrix.os == 'macos-latest'
        run: |
          npm i -g nan
          export NODE_PATH=$(npm root -g)
          npm i -D macos-alias
      - name: Install dependencies
        run: npm i
      - name: Build
        run: npm run build
      - name: Upload artifact for next job
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: ${{ github.workspace }}/app/out/make

  release:
    name: Package and Release
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Download artifact from previous job
        uses: actions/download-artifact@v2
        with:
          name: build
          path: ${{ github.workspace }}
      - name: Package
        working-directory: ${{ github.workspace }}
        run: |
          zip -r linux.zip ./deb/x64/*.deb ./rpm/x64/symbit*.rpm ./zip/linux/x64/*.zip
          zip -r macos.zip ./zip/darwin/x64/*.zip ./*.dmg
          zip -r windows.zip ./squirrel.windows/x64/*
      # - name: Set up Google Cloud SDK
      #   uses: google-github-actions/setup-gcloud@master
      #   with:
      #     project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
      #     service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      #     export_default_credentials: true
      # - name: Push packages to firebase cloud storage
      #   working-directory: ${{ github.workspace }}
      #   run: gsutil cp linux.zip windows.zip "gs://${{ secrets.GOOGLE_PROJECT_ID }}.appspot.com/raphael-chat/releases"
      - name: Create tag
        id: create_tag
        uses: Klemensas/action-autotag@stable
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_prefix: "v"
          package_root: "app/"
      - name: Create release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ steps.create_tag.outputs.tagname }}
          release_name: Raphael's Clone
          draft: false
          prerelease: false
      - name: Upload linux package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: linux.zip
          asset_name: linux.zip
          asset_content_type: application/zip
      - name: Upload macOS package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: macos.zip
          asset_name: macos.zip
          asset_content_type: application/zip
      - name: Upload windows package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: windows.zip
          asset_name: windows.zip
          asset_content_type: application/zip